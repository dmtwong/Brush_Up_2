# -*- coding: utf-8 -*-
"""
Created on Sat Jun  1 13:16:36 2024

@author: USER
"""

def findMedianSortedArrays(A, B):
    n_A, n_B = len(A), len(B)
    
    n_Tot = n_A + n_B
    if n_Tot%2 == 0:
        isEven = True
    else:
        isEven = False
    ix_mid = n_Tot // 2 # if even then avg of ix_mid + ix_mid + 1
    if isEven:
        ix_mid -= 1
    # print("Begin with:", n_A, n_B, isEven, ix_mid)
    if n_A == 0:
        if min(B) == max(B):
            return B[0]
        if isEven == True:
            return (B[ix_mid]  + B[ix_mid+1])/2.0 # complier is python 2
        else:
            return B[ix_mid]
    if n_B == 0:
        if min(A) == max(A):
            return A[0]
        if isEven == True:
            return (A[ix_mid]  + A[ix_mid+1])/2.0
        else:
            return A[ix_mid]    
    # result_1, result_2 = A[0], A[0]
    
    ix_A, ix_B = 0, 0
    count = 0
    for i in range(ix_mid + 1):
        count += 1
        # print('loop:', i, ix_A, ix_B)
        if ix_A == n_A:
            first_mid = B[ix_B + ix_mid - count + 1]
            ix_B += 1
            # print('here 1', first_mid)
            break
        elif ix_B == n_B:
            first_mid = A[ix_A + ix_mid - count + 1]
            ix_A += 1
            # print('here 2', first_mid)
            break
        if A[ix_A] <= B[ix_B]:
            # print('here 3', ix_A, ix_B, i)
            if i  == ix_mid:
                first_mid = A[ix_A]
                ix_A += 1
                continue
            ix_A += 1
        else:
            # print('here 4', ix_A, ix_B, i)
            if i  == ix_mid:
                first_mid = B[ix_B]  
                ix_B += 1
                continue
            ix_B += 1
    # print('there', ix_A, ix_B, first_mid)
    if isEven:
        if ix_A == n_A:
            second_mid = B[ix_B + ix_mid - count + 1]
        elif ix_B == n_B: 
            second_mid = A[ix_A + ix_mid - count + 1]
        elif A[ix_A] <= B[ix_B]:
            second_mid = A[ix_A]
        else:
            second_mid = B[ix_B]
        # print(first_mid, second_mid)
        return (float(first_mid) + float(second_mid)) / 2.0
    else:
        return first_mid
A = [ 0, 23 ]
B = [  ]
findMedianSortedArrays(A,B)
A = [1, 4, 5]
B = [2, 3]
A = [1, 2, 3, 7, 9, 11, 15]
B = [4, 5]
B = [4, 5, 6]

A = [ -50, -41, -40, -19, 5, 21, 28 ]
B = [ -50, -21, -10 ]

A = [  ]
B = [ 20 ]

A = [ -50, -42, -38, 1, 4, 9, 16, 33, 47 ]
B = [ -44 ]

A = [ -1 ]
B = [ -1, 0, 4, 11, 18 ]

A = [ 0, 23 ]
B = [  ]
A = [ -47, 5, 8, 18, 22, 25 ]
B = [  ]

A = [ -49, 33, 35, 42 ]
B = [ -26 ]

A = [ -19 ]
B = [ -47, -43, 26, 27, 32 ]
# Time limit exceed


    # Editoral:
        # Python 2.7 
# class Solution:
#     # @param A : tuple of integers
#     # @param B : tuple of integers
#     # @return a double
#     def findMedianSortedArrays(self, A, B):
#         m = len(A)
#         n = len(B)
#         if m > n:
#             n,m = m,n
#             A,B = B,A
#         if m == 0:
#             if n == 0:
#                 return 0
#             if n%2:
#                 return B[n/2]
#             else:
#                 return (B[n/2]+B[n/2-1])/2.0
#         low = 0
#         high = m
#         while low <= high:
#             i = (low+high)/2
#             j = (m+n+1)/2-i
#             if (j == 0 or i == m or B[j - 1] <= A[i]) and (i == 0 or j == n or A[i-1] <= B[j]):
#                 if (m+n)%2:
#                     if i == 0:
#                         return B[j-1]
#                     elif j == 0:
#                         return A[i-1]
#                     return max(A[i-1],B[j-1])
#                 else:
#                     if i == 0:
#                         return (B[j-1] + min(A[i],B[j]))/2.0
#                     if j == 0:
#                     	return (A[i-1] + min(A[i],B[j]))/2.0
#                     if i == m:
#                     	return (max(A[i-1],B[j-1]) + B[j])/2.0
#                     if j == n:
#                     	return (max(A[i-1],B[j-1]) + A[i])/2.0
#                     return (max(A[i-1],B[j-1]) + min(A[i],B[j]))/2.0
#             elif (j == 0 or i == m or B[j - 1] > A[i]):
#                 low = i+1
#             elif (i == 0 or j == n or A[i-1] > B[j]):
#                 high = i-1
#         return -1

     # c++
# double Solution::findMedianSortedArrays(const vector<int> &A, const vector<int> &B) {
#     int N1 = A.size();
#     int N2 = B.size();
#     if (N1 < N2) return findMedianSortedArrays(B, A);   
#     if (N2 == 0) return (A[(N1-1)/2] + (double)A[N1/2])/2.0;

#     int lo = 0, hi = N2 * 2,mid1,mid2;
#     double L1,L2,R1,R2;
#     while (lo <= hi) {
#          mid2 = (lo + hi) / 2;  
#          mid1 = N1 + N2 - mid2; 

#          L1 = (mid1 == 0) ? -1000000000 : A[(mid1-1)/2]; 
#          L2 = (mid2 == 0) ? -1000000000 : B[(mid2-1)/2];
#          R1 = (mid1 == N1 * 2) ? 1000000000 : A[(mid1)/2];
#          R2 = (mid2 == N2 * 2) ? 1000000000 : B[(mid2)/2];

#         if (L1 > R2) lo = mid2 + 1;    
#         else if (L2 > R1) hi = mid2 - 1;    
#         else return (max(L1,L2) + min(R1, R2)) / 2;
#     }
#     return -1;
# }